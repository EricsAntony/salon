# NOTIFICATION SERVICE - STAGE ENVIRONMENT
# Copy these environment variables to your Render notification-service-stage settings

# =============================================================================
# CORE SERVICE CONFIGURATION
# =============================================================================
PORT=8084
NOTIFICATION_SERVICE_ENV=stage
NOTIFICATION_SERVICE_SERVER_PORT=8084

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Note: NOTIFICATION_SERVICE_DB_URL is auto-provided by Render from salon-db-stage
# Format: postgres://username:password@host:port/database

# =============================================================================
# SMTP CONFIGURATION (EMAIL)
# =============================================================================
# Use staging SMTP server
NOTIFICATION_SERVICE_SMTP_HOST=smtp.staging-provider.com
NOTIFICATION_SERVICE_SMTP_PORT=587
NOTIFICATION_SERVICE_SMTP_USERNAME=your_staging_smtp_username
NOTIFICATION_SERVICE_SMTP_PASSWORD=your_staging_smtp_password
NOTIFICATION_SERVICE_SMTP_FROM=noreply@salon-stage.com

# =============================================================================
# TWILIO CONFIGURATION (SMS)
# =============================================================================
# Use Twilio test credentials for staging
NOTIFICATION_SERVICE_TWILIO_ACCOUNT_SID=your_twilio_staging_account_sid_here
NOTIFICATION_SERVICE_TWILIO_AUTH_TOKEN=your_twilio_staging_auth_token_here
NOTIFICATION_SERVICE_TWILIO_FROM=+1234567890

# =============================================================================
# FIREBASE CLOUD MESSAGING (PUSH NOTIFICATIONS)
# =============================================================================
# Use FCM staging project credentials
NOTIFICATION_SERVICE_FCM_SERVER_KEY=your_fcm_staging_server_key_here
NOTIFICATION_SERVICE_FCM_PROJECT_ID=your_fcm_staging_project_id_here

# =============================================================================
# SENDGRID CONFIGURATION (ALTERNATIVE EMAIL)
# =============================================================================
# Optional: Use SendGrid as alternative email provider
NOTIFICATION_SERVICE_SENDGRID_API_KEY=your_sendgrid_staging_api_key_here

# =============================================================================
# AWS SNS CONFIGURATION (ALTERNATIVE SMS)
# =============================================================================
# Optional: Use AWS SNS as alternative SMS provider
NOTIFICATION_SERVICE_AWS_SNS_ACCESS_KEY=your_aws_staging_access_key_here
NOTIFICATION_SERVICE_AWS_SNS_SECRET_KEY=your_aws_staging_secret_key_here
NOTIFICATION_SERVICE_AWS_SNS_REGION=us-east-1

# =============================================================================
# REDIS CONFIGURATION (MESSAGE QUEUING)
# =============================================================================
# Redis for message queuing (staging instance)
NOTIFICATION_SERVICE_REDIS_HOST=redis-staging.example.com
NOTIFICATION_SERVICE_REDIS_PORT=6379
NOTIFICATION_SERVICE_REDIS_PASSWORD=your_redis_staging_password
NOTIFICATION_SERVICE_REDIS_DB=0

# =============================================================================
# RABBITMQ CONFIGURATION (ALTERNATIVE MESSAGE QUEUE)
# =============================================================================
# Optional: RabbitMQ for advanced message queuing (staging instance)
NOTIFICATION_SERVICE_RABBITMQ_URL=amqp://staging_user:staging_password@rabbitmq-staging.example.com:5672/

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level for staging (info for performance testing)
NOTIFICATION_SERVICE_LOG_LEVEL=info
NOTIFICATION_SERVICE_LOG_SERVICENAME=notification-service-stage

# =============================================================================
# STAGING NOTES
# =============================================================================
# - Use test/sandbox credentials for external services
# - Production-like settings for realistic testing
# - Info level logging for performance testing
# - Use staging-specific external service endpoints
# - Test all notification channels thoroughly before promoting to production
# - Database URL is automatically provided by Render
