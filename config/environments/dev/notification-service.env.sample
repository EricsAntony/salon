# NOTIFICATION SERVICE - DEV ENVIRONMENT
# Copy these environment variables to your Render notification-service-dev settings

# =============================================================================
# CORE SERVICE CONFIGURATION
# =============================================================================
PORT=8084
NOTIFICATION_SERVICE_ENV=dev
NOTIFICATION_SERVICE_SERVER_PORT=8084

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Note: NOTIFICATION_SERVICE_DB_URL is auto-provided by Render from salon-db-dev
# Format: postgres://username:password@host:port/database

# =============================================================================
# SMTP CONFIGURATION (EMAIL)
# =============================================================================
# For development, use MailHog or test SMTP server
NOTIFICATION_SERVICE_SMTP_HOST=localhost
NOTIFICATION_SERVICE_SMTP_PORT=1025
NOTIFICATION_SERVICE_SMTP_USERNAME=
NOTIFICATION_SERVICE_SMTP_PASSWORD=
NOTIFICATION_SERVICE_SMTP_FROM=noreply@salon-dev.com

# =============================================================================
# TWILIO CONFIGURATION (SMS)
# =============================================================================
# Use Twilio test credentials for development
NOTIFICATION_SERVICE_TWILIO_ACCOUNT_SID=your_twilio_account_sid_here
NOTIFICATION_SERVICE_TWILIO_AUTH_TOKEN=your_twilio_auth_token_here
NOTIFICATION_SERVICE_TWILIO_FROM=+1234567890

# =============================================================================
# FIREBASE CLOUD MESSAGING (PUSH NOTIFICATIONS)
# =============================================================================
# Use FCM development project credentials
NOTIFICATION_SERVICE_FCM_SERVER_KEY=your_fcm_server_key_here
NOTIFICATION_SERVICE_FCM_PROJECT_ID=your_fcm_project_id_here

# =============================================================================
# SENDGRID CONFIGURATION (ALTERNATIVE EMAIL)
# =============================================================================
# Optional: Use SendGrid as alternative email provider
NOTIFICATION_SERVICE_SENDGRID_API_KEY=your_sendgrid_api_key_here

# =============================================================================
# AWS SNS CONFIGURATION (ALTERNATIVE SMS)
# =============================================================================
# Optional: Use AWS SNS as alternative SMS provider
NOTIFICATION_SERVICE_AWS_SNS_ACCESS_KEY=your_aws_access_key_here
NOTIFICATION_SERVICE_AWS_SNS_SECRET_KEY=your_aws_secret_key_here
NOTIFICATION_SERVICE_AWS_SNS_REGION=us-east-1

# =============================================================================
# REDIS CONFIGURATION (MESSAGE QUEUING)
# =============================================================================
# Redis for message queuing (development)
NOTIFICATION_SERVICE_REDIS_HOST=localhost
NOTIFICATION_SERVICE_REDIS_PORT=6379
NOTIFICATION_SERVICE_REDIS_PASSWORD=
NOTIFICATION_SERVICE_REDIS_DB=0

# =============================================================================
# RABBITMQ CONFIGURATION (ALTERNATIVE MESSAGE QUEUE)
# =============================================================================
# Optional: RabbitMQ for advanced message queuing
NOTIFICATION_SERVICE_RABBITMQ_URL=amqp://guest:guest@localhost:5672/

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level for development (debug for detailed logs)
NOTIFICATION_SERVICE_LOG_LEVEL=debug
NOTIFICATION_SERVICE_LOG_SERVICENAME=notification-service-dev

# =============================================================================
# DEVELOPMENT NOTES
# =============================================================================
# - Use test/sandbox credentials for all external services
# - SMTP can use MailHog (localhost:1025) for email testing
# - Twilio test credentials won't send actual SMS but will log attempts
# - FCM development keys for testing push notifications
# - Redis/RabbitMQ can run locally via Docker for development
# - Debug logging enabled for troubleshooting notification flows
# - Database URL is automatically provided by Render
